apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"controller-gen.kubebuilder.io/version":"v0.12.0"},"name":"servicechains.security.cerebrum.juniper.net"},"spec":{"group":"security.cerebrum.juniper.net","names":{"kind":"ServiceChain","listKind":"ServiceChainList","plural":"servicechains","singular":"servicechain"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".status.state","name":"State","type":"string"},{"jsonPath":".metadata.creationTimestamp","name":"Age","type":"date"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"ServiceChain is the Schema for the servicechains API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"ServiceChainSpec defines the desired state of ServiceChain","properties":{"serviceChainType":{"description":"ServiceChainType","type":"string"},"services":{"description":"Services","items":{"properties":{"reference":{"description":"updated by user only","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"type":{"type":"string"}},"type":"object"},"type":"array"}},"type":"object"},"status":{"description":"ServiceChainStatus defines the observed state of ServiceChain","properties":{"observation":{"description":"Observation provides additional information related to the state of the resource. For example, if a reconciliation error occurs, Observation will contain a brief description of the problem.","type":"string"},"reference":{"additionalProperties":{"description":"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"description":"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file","type":"object"},"state":{"description":"State describe the current readiness of a resource after the last reconciliation. The possible states include Pending, Success, and Failure.","type":"string"}},"required":["observation","state"],"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2024-01-15T12:26:34Z"
  name: servicechains.security.cerebrum.juniper.net
  uid: 5b7f4f60-f0a5-4206-b477-3525b81e6799
spec:
  conversion:
    strategy: None
  group: security.cerebrum.juniper.net
  names:
    kind: ServiceChain
    listKind: ServiceChainList
    plural: servicechains
    singular: servicechain
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ServiceChain is the Schema for the servicechains API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceChainSpec defines the desired state of ServiceChain
            properties:
              serviceChainType:
                description: ServiceChainType
                type: string
              services:
                description: Services
                items:
                  properties:
                    reference:
                      description: updated by user only
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type:
                      type: string
                  type: object
                type: array
            type: object
          status:
            description: ServiceChainStatus defines the observed state of ServiceChain
            properties:
              observation:
                description: Observation provides additional information related to
                  the state of the resource. For example, if a reconciliation error
                  occurs, Observation will contain a brief description of the problem.
                type: string
              reference:
                additionalProperties:
                  description: LocalObjectReference contains enough information to
                    let you locate the referenced object inside the same namespace.
                  properties:
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                type: object
              state:
                description: State describe the current readiness of a resource after
                  the last reconciliation. The possible states include Pending, Success,
                  and Failure.
                type: string
            required:
            - observation
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ServiceChain
    listKind: ServiceChainList
    plural: servicechains
    singular: servicechain
  conditions:
  - lastTransitionTime: "2024-01-15T12:26:34Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-01-15T12:26:34Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
