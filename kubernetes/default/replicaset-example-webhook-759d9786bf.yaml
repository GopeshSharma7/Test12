apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2024-01-19T18:50:14Z"
  labels:
    app: example-webhook
    pod-template-hash: 759d9786bf
  name: example-webhook-759d9786bf
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: Deployment
    name: example-webhook
    uid: b00a83a6-6ac0-40dd-ab37-f380ced834aa
  uid: d90701f2-0da3-40d0-8c5d-8a85f2a8b408
spec:
  replicas: 1
  selector:
    matchLabels:
      app: example-webhook
      pod-template-hash: 759d9786bf
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: example-webhook
        pod-template-hash: 759d9786bf
    spec:
      containers:
      - image: 10.108.30.10:5000/atom-docker/cn2/bazel-build/dev/x86_64/mutate-webhook:CER-183
        imagePullPolicy: IfNotPresent
        name: server
        ports:
        - containerPort: 8443
          name: tls
          protocol: TCP
        - containerPort: 80
          name: metrics
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/webhook/certs/
          name: webhook-tls-certs
          readOnly: true
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsNonRoot: true
        runAsUser: 1234
      serviceAccount: example-webhook
      serviceAccountName: example-webhook
      terminationGracePeriodSeconds: 30
      volumes:
      - name: webhook-tls-certs
        secret:
          defaultMode: 420
          secretName: example-webhook-tls
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
