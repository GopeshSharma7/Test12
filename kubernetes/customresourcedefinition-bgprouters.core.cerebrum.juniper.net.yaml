apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: CERTIFICATE_NAMESPACE/CERTIFICATE_NAME
    controller-gen.kubebuilder.io/version: v0.12.0
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apiextensions.k8s.io/v1","kind":"CustomResourceDefinition","metadata":{"annotations":{"cert-manager.io/inject-ca-from":"CERTIFICATE_NAMESPACE/CERTIFICATE_NAME","controller-gen.kubebuilder.io/version":"v0.12.0"},"name":"bgprouters.core.cerebrum.juniper.net"},"spec":{"conversion":{"strategy":"Webhook","webhook":{"clientConfig":{"service":{"name":"webhook-service","namespace":"system","path":"/convert"}},"conversionReviewVersions":["v1"]}},"group":"core.cerebrum.juniper.net","names":{"kind":"BGPRouter","listKind":"BGPRouterList","plural":"bgprouters","singular":"bgprouter"},"scope":"Namespaced","versions":[{"additionalPrinterColumns":[{"jsonPath":".spec.autonomousSystemNumber","name":"ASN","type":"integer"},{"jsonPath":".spec.routerId","name":"RouterId","type":"string"},{"jsonPath":".spec.v4Address","name":"Address","type":"string"},{"jsonPath":".spec.instanceParent.parentType","name":"ParentType","type":"string"}],"name":"v1","schema":{"openAPIV3Schema":{"description":"BGPRouter is the Schema for the bgprouters API","properties":{"apiVersion":{"description":"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources","type":"string"},"kind":{"description":"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"metadata":{"type":"object"},"spec":{"description":"BGPRouterSpec defines the desired state of BGPRouter","properties":{"addressFamilies":{"items":{"type":"string"},"type":"array"},"autonomousSystemNumber":{"format":"int32","type":"integer"},"bgpPeerReferences":{"items":{"properties":{"bgpPeerReference":{"description":"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"bgpRouterGroup":{"type":"string"},"routingInstanceParent":{"type":"string"},"sessionAttributes":{"properties":{"addressFamilies":{"items":{"type":"string"},"type":"array"},"allowPrefix":{"description":"CIDR representation (e.g. 192.168.1.1/24). Its public functions must not return other types than CIDR and IpAddr","type":"string"},"authenticationAttributes":{"properties":{"authenticationKey":{"type":"string"},"authenticationMethod":{"type":"string"}},"type":"object"},"exportPolicy":{"description":"Policy to control export of IP prefixes","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"localAddress":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"localAs":{"format":"int32","type":"integer"},"peerAs":{"format":"int32","type":"integer"},"peerV4Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"peerV6Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"sourceInterface":{"type":"string"},"transport":{"properties":{"greTun":{"properties":{"linkAttributes":{"properties":{"mtu":{"type":"integer"},"name":{"type":"string"},"operState":{"description":"LinkOperState represents the values of the IFLA_OPERSTATE link attribute, which contains the RFC2863 state of the interface.","type":"integer"}},"type":"object"},"ttl":{"type":"integer"}},"type":"object"}},"type":"object"}},"type":"object"}},"type":"object"},"type":"array"},"instanceParent":{"properties":{"parentType":{"type":"string"},"reference":{"description":"ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 .","properties":{"apiVersion":{"description":"API version of the referent.","type":"string"},"fieldPath":{"description":"If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.","type":"string"},"kind":{"description":"Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"namespace":{"description":"Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/","type":"string"},"resourceVersion":{"description":"Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency","type":"string"},"uid":{"description":"UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"}},"type":"object"},"interface":{"type":"string"},"managed":{"type":"boolean"},"routerId":{"type":"string"},"routingInstanceParent":{"description":"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"v4Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"v6Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"}},"type":"object"},"status":{"description":"BGPRouterStatus defines the observed state of BGPRouter","properties":{"bgpPeerReferences":{"description":"INSERT ADDITIONAL STATUS FIELD - define observed state of cluster Important: Run \"make\" to regenerate code after modifying this file","items":{"properties":{"bgpPeerReference":{"description":"LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"bgpRouterGroup":{"type":"string"},"routingInstanceParent":{"type":"string"},"sessionAttributes":{"properties":{"addressFamilies":{"items":{"type":"string"},"type":"array"},"allowPrefix":{"description":"CIDR representation (e.g. 192.168.1.1/24). Its public functions must not return other types than CIDR and IpAddr","type":"string"},"authenticationAttributes":{"properties":{"authenticationKey":{"type":"string"},"authenticationMethod":{"type":"string"}},"type":"object"},"exportPolicy":{"description":"Policy to control export of IP prefixes","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?","type":"string"}},"type":"object","x-kubernetes-map-type":"atomic"},"localAddress":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"localAs":{"format":"int32","type":"integer"},"peerAs":{"format":"int32","type":"integer"},"peerV4Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"peerV6Address":{"description":"IpAddr representation (e.g. 192.168.1.1) Its public functions must not return other types than CIDR and IpAddr","type":"string"},"sourceInterface":{"type":"string"},"transport":{"properties":{"greTun":{"properties":{"linkAttributes":{"properties":{"mtu":{"type":"integer"},"name":{"type":"string"},"operState":{"description":"LinkOperState represents the values of the IFLA_OPERSTATE link attribute, which contains the RFC2863 state of the interface.","type":"integer"}},"type":"object"},"ttl":{"type":"integer"}},"type":"object"}},"type":"object"}},"type":"object"}},"type":"object"},"type":"array"}},"type":"object"}},"type":"object"}},"served":true,"storage":true,"subresources":{"status":{}}}]}}
  creationTimestamp: "2024-01-15T12:26:33Z"
  name: bgprouters.core.cerebrum.juniper.net
  uid: 4a356ce2-b45b-456f-a85c-146794dfa783
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: system
          path: /convert
          port: 443
      conversionReviewVersions:
      - v1
  group: core.cerebrum.juniper.net
  names:
    kind: BGPRouter
    listKind: BGPRouterList
    plural: bgprouters
    singular: bgprouter
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.autonomousSystemNumber
      name: ASN
      type: integer
    - jsonPath: .spec.routerId
      name: RouterId
      type: string
    - jsonPath: .spec.v4Address
      name: Address
      type: string
    - jsonPath: .spec.instanceParent.parentType
      name: ParentType
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: BGPRouter is the Schema for the bgprouters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BGPRouterSpec defines the desired state of BGPRouter
            properties:
              addressFamilies:
                items:
                  type: string
                type: array
              autonomousSystemNumber:
                format: int32
                type: integer
              bgpPeerReferences:
                items:
                  properties:
                    bgpPeerReference:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    bgpRouterGroup:
                      type: string
                    routingInstanceParent:
                      type: string
                    sessionAttributes:
                      properties:
                        addressFamilies:
                          items:
                            type: string
                          type: array
                        allowPrefix:
                          description: CIDR representation (e.g. 192.168.1.1/24).
                            Its public functions must not return other types than
                            CIDR and IpAddr
                          type: string
                        authenticationAttributes:
                          properties:
                            authenticationKey:
                              type: string
                            authenticationMethod:
                              type: string
                          type: object
                        exportPolicy:
                          description: Policy to control export of IP prefixes
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        localAddress:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        localAs:
                          format: int32
                          type: integer
                        peerAs:
                          format: int32
                          type: integer
                        peerV4Address:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        peerV6Address:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        sourceInterface:
                          type: string
                        transport:
                          properties:
                            greTun:
                              properties:
                                linkAttributes:
                                  properties:
                                    mtu:
                                      type: integer
                                    name:
                                      type: string
                                    operState:
                                      description: LinkOperState represents the values
                                        of the IFLA_OPERSTATE link attribute, which
                                        contains the RFC2863 state of the interface.
                                      type: integer
                                  type: object
                                ttl:
                                  type: integer
                              type: object
                          type: object
                      type: object
                  type: object
                type: array
              instanceParent:
                properties:
                  parentType:
                    type: string
                  reference:
                    description: "ObjectReference contains enough information to let
                      you inspect or modify the referred object. --- New uses of this
                      type are discouraged because of difficulty describing its usage
                      when embedded in APIs. 1. Ignored fields.  It includes many
                      fields which are not generally honored.  For instance, ResourceVersion
                      and FieldPath are both very rarely valid in actual usage. 2.
                      Invalid usage help.  It is impossible to add specific help for
                      individual usage.  In most embedded usages, there are particular
                      restrictions like, \"must refer only to types A and B\" or \"UID
                      not honored\" or \"name must be restricted\". Those cannot be
                      well described when embedded. 3. Inconsistent validation.  Because
                      the usages are different, the validation rules are different
                      by usage, which makes it hard for users to predict what will
                      happen. 4. The fields are both imprecise and overly precise.
                      \ Kind is not a precise mapping to a URL. This can produce ambiguity
                      during interpretation and require a REST mapping.  In most cases,
                      the dependency is on the group,resource tuple and the version
                      of the actual struct is irrelevant. 5. We cannot easily change
                      it.  Because this type is embedded in many locations, updates
                      to this type will affect numerous schemas.  Don't make new APIs
                      embed an underspecified API type they do not control. \n Instead
                      of using this type, create a locally provided and used type
                      that is well-focused on your reference. For example, ServiceReferences
                      for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                      ."
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                type: object
              interface:
                type: string
              managed:
                type: boolean
              routerId:
                type: string
              routingInstanceParent:
                description: LocalObjectReference contains enough information to let
                  you locate the referenced object inside the same namespace.
                properties:
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              v4Address:
                description: IpAddr representation (e.g. 192.168.1.1) Its public functions
                  must not return other types than CIDR and IpAddr
                type: string
              v6Address:
                description: IpAddr representation (e.g. 192.168.1.1) Its public functions
                  must not return other types than CIDR and IpAddr
                type: string
            type: object
          status:
            description: BGPRouterStatus defines the observed state of BGPRouter
            properties:
              bgpPeerReferences:
                description: 'INSERT ADDITIONAL STATUS FIELD - define observed state
                  of cluster Important: Run "make" to regenerate code after modifying
                  this file'
                items:
                  properties:
                    bgpPeerReference:
                      description: LocalObjectReference contains enough information
                        to let you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    bgpRouterGroup:
                      type: string
                    routingInstanceParent:
                      type: string
                    sessionAttributes:
                      properties:
                        addressFamilies:
                          items:
                            type: string
                          type: array
                        allowPrefix:
                          description: CIDR representation (e.g. 192.168.1.1/24).
                            Its public functions must not return other types than
                            CIDR and IpAddr
                          type: string
                        authenticationAttributes:
                          properties:
                            authenticationKey:
                              type: string
                            authenticationMethod:
                              type: string
                          type: object
                        exportPolicy:
                          description: Policy to control export of IP prefixes
                          properties:
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        localAddress:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        localAs:
                          format: int32
                          type: integer
                        peerAs:
                          format: int32
                          type: integer
                        peerV4Address:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        peerV6Address:
                          description: IpAddr representation (e.g. 192.168.1.1) Its
                            public functions must not return other types than CIDR
                            and IpAddr
                          type: string
                        sourceInterface:
                          type: string
                        transport:
                          properties:
                            greTun:
                              properties:
                                linkAttributes:
                                  properties:
                                    mtu:
                                      type: integer
                                    name:
                                      type: string
                                    operState:
                                      description: LinkOperState represents the values
                                        of the IFLA_OPERSTATE link attribute, which
                                        contains the RFC2863 state of the interface.
                                      type: integer
                                  type: object
                                ttl:
                                  type: integer
                              type: object
                          type: object
                      type: object
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: BGPRouter
    listKind: BGPRouterList
    plural: bgprouters
    singular: bgprouter
  conditions:
  - lastTransitionTime: "2024-01-15T12:26:33Z"
    message: no conflicts found
    reason: NoConflicts
    status: "True"
    type: NamesAccepted
  - lastTransitionTime: "2024-01-15T12:26:33Z"
    message: the initial names have been accepted
    reason: InitialNamesAccepted
    status: "True"
    type: Established
  storedVersions:
  - v1
